#include <ql_oe.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "driver.h"
#include "utils.h"
#include "log.h"
#include "network.h"
#include "devconfig.h"

tibase_typedef tibase;

static CAR_STATUS CarStatus = STATUS_UNKNOW;

static void SendDriverData(CAR_STATUS status, time_t BeginTime, time_t EndTime, loc_def b_location, loc_def e_location, u32 meter);

static void SendLoginState(void);

static int vehicle_mov_time = 0;
static int vehicle_stop_time = 0;
static u16 notify_time_cnt = 0;
static loc_def tmp_blocrun;
static u8 flg_tmp_blocrun = 0;
static u32  time_start_tmp = 0;

void clear_driver_result(u8 clear_day, u8 clear_week){
	vehicle_mov_time = 0;
	vehicle_stop_time = 0;
	tmp_blocrun.latitude = 0;
	tmp_blocrun.longitude = 0;
	flg_tmp_blocrun = 0;
	time_start_tmp = 0;

	tibase.bRunTime = 0;
	tibase.bStopTime = 0;

	tibase.b_loc_run.latitude = tibase.b_loc_run.longitude = 0;
	tibase.b_loc_stop.latitude = tibase.b_loc_stop.longitude = 0;
	tibase.bMeter = 0;

	if((clear_day == 1) || (clear_week == 1)){
		tibase.GPSMeterInday = 0;

		tibase.ParkCount = 0;
		tibase.OverSpeedCount = 0;

		tibase.DriveContinueCount = 0;
		tibase.OverDriveContinueCount = 0;

		if(clear_day == 1){
			tibase.DriverInday = 0;
		}

		if(clear_week == 1){
			tibase.DriverInWeek = 0;
			tibase.DriverInday = 0;
		}
	}

	/* update database */
	update_tibase(tibase);
	log_debug("XOA DU LIEU LX THANH CONG\n");
}

void clear_driver_info(void){
	/* Clear driver infomation */
	memset(tibase.driver_info.DriverName, 0x0, MAX_SIZE_DRIVER_NAME);
	memset(tibase.driver_info.DriverLicense, 0x0, MAX_SIZE_DRIVER_LICENSE);
	memset(tibase.driver_info.IssDate, 0x0, MAX_SIZE_TAG_DATE);
	memset(tibase.driver_info.ExpDate, 0x0, MAX_SIZE_TAG_DATE);
	tibase.UID = 1;
}

int write_driver_data(CAR_STATUS state, time_t btime, time_t etime, loc_def this_loc, u8 current_day){
	driver_data_typedef tmp;
	memset(&tmp, 0x0, sizeof(driver_data_typedef));

	/*Insert Driver data to database*/
	tmp.BTime = btime;
	tmp.ETime = etime;
	tmp.Status = state;
	tmp.UID = tibase.UID;

	if(state == STATUS_RUNNING){
		/* begin run location */
		tmp.begin_location = tibase.b_loc_run;

		tmp.Distance = tibase.GPSMeterInday - tibase.bMeter;

		tibase.DriveContinueCount += 1;
		if((etime - btime) > TIME_4_HOUR){
			tibase.OverDriveContinueCount += 1;
		}
	}else{
		/* begin stop location */
		tmp.begin_location = this_loc;

		tmp.Distance = 0;
		/* increment park count */
		tibase.ParkCount += 1;
	}

	/* end location */
	tmp.end_location = this_loc;

	tmp.FlgSend = 0;
	tmp.DrvDay = current_day;

	/*send driver data to server*/
	SendDriverData(state, btime, etime, tmp.begin_location, tmp.end_location, tmp.Distance);

	if(inset_DriverData(tmp) < 0){
		log_debug("WRITE DRIVER DATA ERROR\n");
		return -1;
	}

	log_debug("WRITE DRIVER DATA SUCCESS\n");
	return 0;
}

u32 get_run_time(void){
	if((GPS_Data.timestamp < TIMESTAMP_2025) || (tibase.bRunTime < TIMESTAMP_2025)) return 0;

	if(tibase.bStopTime > TIMESTAMP_2025) return (u32)(tibase.bStopTime - tibase.bRunTime) + tibase.RunSecondsPrvDay;

	return (u32)(GPS_Data.timestamp - tibase.bRunTime) + tibase.RunSecondsPrvDay;
}

u32 get_stop_time(void){
	if((GPS_Data.timestamp < TIMESTAMP_2025) || (tibase.bStopTime < TIMESTAMP_2025)) return 0;

	return (u32)(GPS_Data.timestamp - tibase.bStopTime);
}

void calculate_drive_data(void){
	u32 run_time_value = 0;
	u32 stop_time_value = 0;

	/* check time valid */
	if(GPS_Data.timestamp < TIMESTAMP_2025) return;

	/* get run and stop time */
	run_time_value = get_run_time();
	stop_time_value = get_stop_time();

	if(db_wait___ != 0) db_wait___ --;

	if(tibase.flg_reload_dvr_data == 1){
		/* reload last driver result */
		load_driver_data_by_uid(tibase.UID, GPS_Data.timestamp);

		/* reload last driver summary result */
		load_driver_summary_data_by_uid(tibase.UID);

		tibase.flg_reload_dvr_data = 0;
	}

	//check valid of driverinday value
	if((tibase.DriverInday / 60) > ((GPS_Data.gps_time->tm_hour * 60) + (GPS_Data.gps_time->tm_min)  + TIME_5_MINUTES)){
		tibase.DriverInday = run_time_value;
	}

	//log_trace("RUN -> %d, STOP -> %d \n", tibase.RunSeconds, tibase.StopSeconds);
	if(GPS_Data.gps_speed > SystemSetting.data.RunLevel){/* RUNNING... */

		if(flg_tmp_blocrun == 0){
			tmp_blocrun = GPS_Data.location;
			time_start_tmp = GPS_Data.timestamp;
			flg_tmp_blocrun = 1;
		}

		if((vehicle_mov_time >= 0) && (vehicle_mov_time <= 20)){
			vehicle_mov_time ++;
			return;
		}

		flg_tmp_blocrun = 0;
		/* Check car status */
		if((CarStatus == STATUS_STOPPING) && (tibase.bStopTime != 0)){//truoc do dung do
			/* increase driver inday if stop less than 15 min  */
			if((tibase.bRunTime != 0) && (stop_time_value < TIME_15_MINUTES)){
				tibase.DriverInday += stop_time_value;
				tibase.DriverInWeek += stop_time_value;

				update_tibase(tibase);
			}
			/* Write date stop */
			if(stop_time_value >= SystemSetting.data.DrvStopTime){
				/* Write driver data */
				write_driver_data(STATUS_STOPPING, (time_t)tibase.bStopTime, (time_t)GPS_Data.timestamp, tibase.b_loc_stop, (u8)GPS_Data.gps_time->tm_mday);
			}
		}

		if(run_time_value > (tibase.DriverInday + TIME_15_MINUTES + tibase.RunSecondsPrvDay)){
			tibase.bRunTime = 0;
			update_tibase(tibase);
		}

		/* clear stop data */
		if(tibase.bStopTime != 0){
			if(stop_time_value >= TIME_15_MINUTES){
				/* reset driver data and update tibase */
				tibase.bRunTime = 0;
				/* Reset time driving pre time */
				tibase.RunSecondsPrvDay = 0;
				/* clear trace */
				tibase.b_loc_run.latitude = tibase.b_loc_run.longitude = 0;
				tibase.bMeter = 0;
			}
			
			tibase.bStopTime = 0;
			/* clear trace */
			tibase.b_loc_stop.latitude = tibase.b_loc_stop.longitude = 0;
			update_tibase(tibase);

			log_system("xoa thoi gian dung: => %u, %f, %f \n", tibase.bStopTime, tibase.b_loc_stop.latitude, tibase.b_loc_stop.longitude);
		}

		/* get start running data */
		if(tibase.bRunTime == 0){
			tibase.b_loc_run = tmp_blocrun;
			tibase.bMeter = tibase.GPSMeterInday;
			tibase.bRunTime = time_start_tmp;
			update_tibase(tibase);

			log_system("loc start = %f, %f \n", tibase.b_loc_run.latitude, tibase.b_loc_run.longitude);
		}

		/* Change car status */
		CarStatus = STATUS_RUNNING;

		/* increment run seconds */
		if(vehicle_mov_time > 0){
			tibase.DriverInday += vehicle_mov_time;
			tibase.DriverInWeek += vehicle_mov_time;
			vehicle_mov_time = -1;
		}else{
			tibase.DriverInday += 1;
			tibase.DriverInWeek += 1;
		}

		/* Check next day */
		if(GPS_Data.flg_new_day == 1){
			/* Write current driver to new day*/
			SendLoginState();

			if((GPS_Data.gps_time->tm_hour == 0) && (GPS_Data.gps_time->tm_min == 0)){
				/* Check time driving */
				if((run_time_value > TIME_1_MINUTES) && (run_time_value < TIME_1_DAY)){
					struct tm *last_tm;
					time_t yesterday;

					yesterday = (tibase.bRunTime - GMT_HN);
					last_tm = localtime( &yesterday );

					/* Write driver data */
					write_driver_data(STATUS_RUNNING, (time_t)tibase.bRunTime, (time_t)(GPS_Data.timestamp - 60), GPS_Data.location, (u8)(last_tm->tm_mday - 1));

					/* Store pre sec run time */
					tibase.RunSecondsPrvDay = run_time_value;
				}
			}else{
				tibase.RunSecondsPrvDay = 0;
			}

			/********* Clear Data ********/
			if(GPS_Data.flg_new_week == 1){
				/* reset driver data */
				clear_driver_result(1, 1);
				clear_summary_data(1, 1);
				GPS_Data.flg_new_week = 0;
			}else{
				/* reset driver data */
				clear_driver_result(1, 0);
				clear_summary_data(1, 0);
			}
			/********* Clear Data ********/


			GPS_Data.flg_new_day = 0;

			DeviceSetting.CurrentDay = GPS_Data.gps_time->tm_mday;
			/* delete all trip info and driver data new day */
			delete_database_ByDay(DeviceSetting.CurrentDay);
			/* update current day value */
			write_number(CURRENT_DAY_PATH, (u64)DeviceSetting.CurrentDay);

			/* store current day of week */
			DeviceSetting.CurrentWeek = get_week_of_year(GPS_Data.gps_time);
			write_number(CURRENT_WEEK_PATH, (u64)DeviceSetting.CurrentWeek);
		}

		notify_time_cnt ++;
		if(tibase.LoginStatus == STATUS_LOGOUT){
			if((notify_time_cnt % 31) == 0){
				add_play_list("/usrdata/sound/", "chuadangnhap.wav", SystemSetting.data.SpeakerVolume);
			}
			network_data.move_logout_warning = true;
		}else{
			network_data.move_logout_warning = false;
		}

		if(tibase.DriverInWeek > (TIME_48_HOUR - SystemSetting.data.DrvForeWarningTime)){/* Check over driving in week time notify */
			if((notify_time_cnt % 19) == 0){
				add_play_list("/usrdata/sound/", "warningdrvinweek.wav", SystemSetting.data.SpeakerVolume);
			}
			tibase.over_driver_inweek_status = true;
		}else if(tibase.DriverInday > (TIME_10_HOUR - SystemSetting.data.DrvForeWarningTime)){/* Check over driving in day time notify */
			if((notify_time_cnt % 20) == 0){
				add_play_list("/usrdata/sound/", "warningdrvinday.wav", SystemSetting.data.SpeakerVolume);
			}
			tibase.over_driver_inweek_status = false;
			tibase.over_driver_inday_status = true;
		}else if(run_time_value > (TIME_4_HOUR - SystemSetting.data.DrvForeWarningTime)){/* Check over driving continue time notify */
			if(run_time_value > TIME_4_HOUR){
				if((notify_time_cnt % 20) == 0){
					add_play_list("/usrdata/sound/", "violationdrcontinue.wav", SystemSetting.data.SpeakerVolume);
				}
			}else{
				if((notify_time_cnt % 20) == 0){
					add_play_list("/usrdata/sound/", "warningdrcontinue.wav", SystemSetting.data.SpeakerVolume);
				}
			}

			/* notify */
			tibase.over_driver_inweek_status = false;
			tibase.over_driver_inday_status = false;
			tibase.over_driver_continue_status = true;
		}else{
			tibase.over_driver_inweek_status = false;
			tibase.over_driver_inday_status = false;
			tibase.over_driver_continue_status = false;
		}
	}else{/* STOPPING... */
		tibase.over_driver_continue_status = false;
		tibase.over_driver_inweek_status = false;
		tibase.over_driver_inday_status = false;
		network_data.move_logout_warning = false;
		flg_tmp_blocrun = 0;

		/* get begin stop time */
		if(tibase.bStopTime == 0){
			tibase.bStopTime = GPS_Data.timestamp;
			tibase.b_loc_stop = GPS_Data.location;
			update_tibase(tibase);
			log_system("loc stop = %f, %f \n", tibase.b_loc_stop.latitude, tibase.b_loc_stop.longitude);
		}

		/* increment stop seconds */
		vehicle_mov_time = 0;

		/* Check time driving */
		if(((tibase.bRunTime != 0) && (tibase.bStopTime != 0)) || (tibase.RunSecondsPrvDay != 0)){
			if(stop_time_value > TIME_15_MINUTES){
				/* Write driver data */
				write_driver_data(STATUS_RUNNING, (time_t)tibase.bRunTime, (time_t)tibase.bStopTime, GPS_Data.location, (u8)GPS_Data.gps_time->tm_mday);

				tibase.bRunTime = 0;

				/* Reset time driving pre time */
				tibase.RunSecondsPrvDay = 0;

				/* clear trace */
				tibase.b_loc_run.latitude = tibase.b_loc_run.longitude = 0;

				tibase.bMeter = 0;

				update_tibase(tibase);

				log_system("xoa thoi gian chay: => %u, %f, %f \n", tibase.bRunTime, tibase.b_loc_run.latitude, tibase.b_loc_run.longitude);
			}
		}

		/* Change status car */
		CarStatus = STATUS_STOPPING;

		/* Check next day */
		if((GPS_Data.flg_new_day == 1) || (GPS_Data.flg_new_week == 1)){
			struct tm *last_tm;
			time_t yesterday;

			/* Write current driver to new day*/
			SendLoginState();

			if((GPS_Data.gps_time->tm_hour == 0) && (GPS_Data.gps_time->tm_min == 0)){
				/* Check time driving */
				if((tibase.bRunTime != 0) && (tibase.bStopTime != 0)){
					yesterday = (tibase.bRunTime - GMT_HN);
					last_tm = localtime( &yesterday );
					/* Write driver data */
					write_driver_data(STATUS_RUNNING, (time_t)tibase.bRunTime, (time_t)tibase.bStopTime, GPS_Data.location, (u8)(last_tm->tm_mday - 1));
				}else if(tibase.bStopTime != 0){
					yesterday = (tibase.bStopTime - GMT_HN);
					last_tm = localtime( &yesterday );
					/* Write driver data */
					write_driver_data(STATUS_STOPPING, (time_t)tibase.bStopTime, (time_t)(GPS_Data.timestamp - 60), tibase.b_loc_stop, (u8)(last_tm->tm_mday - 1));
				}
			}

			/********* Clear Data ********/
			if(GPS_Data.flg_new_week == 1){
				/* reset driver data */
				clear_driver_result(1, 1);
				clear_summary_data(1, 1);
				GPS_Data.flg_new_week = 0;
			}else{
				/* reset driver data */
				clear_driver_result(1, 0);
				clear_summary_data(1, 0);
			}
			/********* Clear Data ********/

			/* clear flag new day */
			GPS_Data.flg_new_day = 0;

			DeviceSetting.CurrentDay = GPS_Data.gps_time->tm_mday;
			/* delete all trip info and driver data new day */
			delete_database_ByDay(DeviceSetting.CurrentDay);
			/* update current day value */
			write_number(CURRENT_DAY_PATH, (u64)DeviceSetting.CurrentDay);

			/* store current day of week */
			DeviceSetting.CurrentWeek = get_week_of_year(GPS_Data.gps_time);
			write_number(CURRENT_WEEK_PATH, (u64)DeviceSetting.CurrentWeek);
		}
	}

	if((GPS_Data.timestamp % 300) == 0){
		update_tibase(tibase);
	}

	//log_system("run = %u, stop = %u, blat_run = %f, blon_run = %f, blat_stop = %f, blon_stop = %f\n", run_time_value, stop_time_value, tibase.b_loc_run.latitude, tibase.b_loc_run.longitude, tibase.b_loc_stop.latitude, tibase.b_loc_stop.longitude);
}

#define SIZE_OF_UID 8
int driver_login(u8 * info, u8 chk){
	u64 UID = 0;
	u8 bUID[10];

	u32 stop_time_ = get_stop_time();
	u32 run_time_ = get_run_time();

	db_wait___ = 10;

	if(GPS_Data.gps_status == 0){
		add_play_list("/usrdata/sound/", "loginfailgps.wav", SystemSetting.data.SpeakerVolume);
		return -1;
	}else if(GPS_Data.gps_speed > SystemSetting.data.RunLevel){
		add_play_list("/usrdata/sound/", "loginfailmove.wav", SystemSetting.data.SpeakerVolume);
		return -1;
	}

	/* get UID */
	memset(bUID, 0x0, 10);
	memcpy(bUID, info, SIZE_OF_UID - 3);

	UID = *(u64*)(bUID);
	log_debug("-> UID = %llu\n", UID);

	sleep(3);

	if(tibase.LoginStatus == STATUS_LOGIN){//current driver card
		if(tibase.UID == UID){
			log_system("DRIVER LOGOUT\n");
			add_play_list("/usrdata/sound/", "logoutsuccess.wav", SystemSetting.data.SpeakerVolume);

			driver_logout();
			//Load driver infor by UID
			load_driver_info_by_uid(tibase.UID);
			//send driver info to RFID

			log_system("DRIVER INFO UPDATE 2\n");
			update_rfid_driver_data();
			if(chk == 1)
				return  0;
		}
		driver_logout();
	}else{
		/* Write information current driver */
		if((stop_time_ < TIME_15_MINUTES) && (run_time_ != 0)){
			tibase.DriverInday += stop_time_;
			tibase.DriverInWeek += stop_time_;

			/* Write infomation run */
			write_driver_data(STATUS_RUNNING, (time_t)tibase.bRunTime, (time_t)tibase.bStopTime, tibase.b_loc_run, (u8)GPS_Data.gps_time->tm_mday);

		}else if(stop_time_ >= SystemSetting.data.DrvStopTime){
			/* Write infomation stop */
			write_driver_data(STATUS_STOPPING, (time_t)tibase.bStopTime, (time_t)GPS_Data.timestamp, tibase.b_loc_stop, (u8)GPS_Data.gps_time->tm_mday);
		}
	}

	/* Save Driver information to Tibase */
	tibase.UID = UID;
	memset(tibase.driver_info.DriverName, 0x0, MAX_SIZE_DRIVER_NAME + 10);
	memset(tibase.driver_info.DriverLicense, 0x0, MAX_SIZE_DRIVER_LICENSE + 10);
	memset(tibase.driver_info.IssDate, 0x0, MAX_SIZE_TAG_DATE + 10);
	memset(tibase.driver_info.ExpDate, 0x0, MAX_SIZE_TAG_DATE + 10);

	/* Reset time driving time */
	tibase.bRunTime = 0;
	tibase.bStopTime = 0;

	/* Reset time driving pre time */
	tibase.RunSecondsPrvDay = 0;

	/* Set login status */
	tibase.LoginStatus = STATUS_LOGIN;

	//Load driver infor by UID
	load_driver_info_by_uid(tibase.UID);

	//send driver info to MCU
	log_system("DRIVER INFO UPDATE 3\n");

	/* send driver data to RFID box */
	update_rfid_driver_data();

	log_system("DRIVER LOGIN\n");

	add_play_list("/usrdata/sound/", "loginsuccess.wav", SystemSetting.data.SpeakerVolume);

	/* Send Driver information to SV */
	SendLoginState();

	tibase.flg_reload_dvr_data = 1;

	return 0;
}

u8 update_sync_status(u8 * info){
	u64 UID = 0;
	u8 bUID[10];

	/* get UID */
	memset(bUID, 0x0, 10);
	memcpy(bUID, info, SIZE_OF_UID - 3);

	UID =  *(u64*)(bUID);
	log_debug("DRIVER CARD HAS SYNC, UID = %llu\n", UID);
	//update database
	update_driver_sync_by_uid(UID, 0);

	return 1;
}

void driver_logout(void){
	u32 stop_time__ = get_stop_time();
	u32 run_time__ = get_run_time();

	/* store current data to tibase */
	update_tibase(tibase);

	if(tibase.LoginStatus == STATUS_LOGIN){
		/* Write information current driver */
		if((stop_time__ < TIME_15_MINUTES) && (run_time__ != 0)){
			tibase.DriverInday += (stop_time__ + run_time__);
			tibase.DriverInWeek += (stop_time__ + run_time__);

			/* Car running 3 minute */
			if(run_time__  > TIME_3_MINUTES){
				/* Write infomation run */
				write_driver_data(STATUS_RUNNING, (time_t)tibase.bRunTime, (time_t)tibase.bStopTime, tibase.b_loc_stop, (u8)GPS_Data.gps_time->tm_mday);
			}
		}

		if(stop_time__ >= SystemSetting.data.DrvStopTime){
			/* Write infomation stop */
			write_driver_data(STATUS_STOPPING, (time_t)tibase.bStopTime, (time_t)GPS_Data.timestamp, tibase.b_loc_stop, (u8)GPS_Data.gps_time->tm_mday);
		}

		/* clear driver information */
		clear_driver_info();

		/* Reset time driving time */
		tibase.bRunTime = 0;
		tibase.bStopTime = 0;

		tibase.UID = 1;
		tibase.DriverInWeek = 0;
		tibase.DriverInday = 0;
		tibase.OverSpeedCount = 0;
		tibase.DriveContinueCount = 0;
		tibase.ParkCount = 0;
		tibase.OverDriveContinueCount = 0;

		/* Reset time driving pre time */
		tibase.RunSecondsPrvDay = 0;

		/* change login status */
		tibase.LoginStatus = STATUS_LOGOUT;

		/* update Tibase */
		update_tibase(tibase);

		/* Send Driver information to SV */
		SendLoginState();
	}
}

static void SendLoginState(void){
	tcp_mail_queue_typedef buf;
	u8 crc = 0;

	memset(buf.data, 0, TCP_MAX_LENGTH);

	/* Frame header */
	buf.data[0] = 0xF0;
	buf.data[1] = 0xF0;

	/* Device ID */
	buf.data[2] =  SystemSetting.data.DeviceID & 0xFF;
	buf.data[3] = (SystemSetting.data.DeviceID >> 8) & 0xFF;
	buf.data[4] = (SystemSetting.data.DeviceID >> 16) & 0xFF;
	buf.data[5] = (SystemSetting.data.DeviceID >> 24) & 0xFF;
	buf.data[6] = (SystemSetting.data.DeviceID >> 32) & 0xFF;
	buf.data[7] = (SystemSetting.data.DeviceID >> 40) & 0xFF;
	buf.data[8] = (SystemSetting.data.DeviceID >> 48) & 0xFF;
	buf.data[9] = (SystemSetting.data.DeviceID >> 56) & 0xFF;

	/* Version */
	buf.data[10] = DRIVER_INFO;

	buf.data[13] = tibase.LoginStatus;

	buf.data[14] =  tibase.UID & 0xFF;
	buf.data[15] = (tibase.UID >> 8) & 0xFF;
	buf.data[16] = (tibase.UID >> 16) & 0xFF;
	buf.data[17] = (tibase.UID >> 24) & 0xFF;
	buf.data[18] = (tibase.UID >> 32) & 0xFF;
	buf.data[19] = (tibase.UID >> 40) & 0xFF;
	buf.data[20] = (tibase.UID >> 48) & 0xFF;
	buf.data[21] = (tibase.UID >> 56) & 0xFF;

	buf.data[22] = tibase.driver_info.sync;

	buf.size = 24;
	/* Length data */
	buf.data[11] = buf.size & 0xFF;
	buf.data[12] = (buf.size >> 8);

	crc = CRC_8BitsCompute(buf.data, 23);
	buf.data[23] = crc;

	buf.Data_Type = DRIVER_INFO;
	buf.trace = 0;

	Push_TCP_Data(buf);
}

static void SendDriverData(CAR_STATUS status, time_t BeginTime, time_t EndTime, loc_def b_location, loc_def e_location, u32 meter){
	u8 crc = 0;
	tcp_mail_queue_typedef buf;

	memset(buf.data, 0, TCP_MAX_LENGTH);

	/* Frame header */
	buf.data[0] = 0xF0;
	buf.data[1] = 0xF0;

	/* Device ID */
	buf.data[2] =  SystemSetting.data.DeviceID & 0xFF;
	buf.data[3] = (SystemSetting.data.DeviceID >> 8) & 0xFF;
	buf.data[4] = (SystemSetting.data.DeviceID >> 16) & 0xFF;
	buf.data[5] = (SystemSetting.data.DeviceID >> 24) & 0xFF;
	buf.data[6] = (SystemSetting.data.DeviceID >> 32) & 0xFF;
	buf.data[7] = (SystemSetting.data.DeviceID >> 40) & 0xFF;
	buf.data[8] = (SystemSetting.data.DeviceID >> 48) & 0xFF;
	buf.data[9] = (SystemSetting.data.DeviceID >> 56) & 0xFF;

	/* Version */
	buf.data[10] = DRIVER_IN_OUT;

	/* Car Status */
	buf.data[13] = status;

	/* Begin time */
	*(int32_t*)(buf.data + 14) =  BeginTime;
	/* Begin Lat */
	*(float*)(buf.data + 18) = b_location.latitude;
	/* Begin long */
	*(float*)(buf.data + 22) = b_location.longitude;
	/* End time */
	*(int32_t*)(buf.data + 26) = EndTime;
	/* End Lat */
	*(float*)(buf.data + 30) = e_location.latitude;
	/* End Long */
	*(float*)(buf.data + 34) = e_location.longitude;
	/* mile meter in trip */
	*(int32_t*)(buf.data + 38) =  meter;

	buf.data[42] =  tibase.UID & 0xFF;
	buf.data[43] = (tibase.UID >> 8) & 0xFF;
	buf.data[44] = (tibase.UID >> 16) & 0xFF;
	buf.data[45] = (tibase.UID >> 24) & 0xFF;
	buf.data[46] = (tibase.UID >> 32) & 0xFF;
	buf.data[47] = (tibase.UID >> 40) & 0xFF;
	buf.data[48] = (tibase.UID >> 48) & 0xFF;
	buf.data[49] = (tibase.UID >> 56) & 0xFF;

	buf.size = 51;
	buf.data[11] = buf.size & 0xFF;
	buf.data[12] = buf.size >> 8;

	crc = CRC_8BitsCompute(buf.data, 50);
	buf.data[50] = crc;

	buf.Data_Type = DRIVER_IN_OUT;
	buf.trace = BeginTime;

	Push_TCP_Data(buf);
}

void sync_tibase(void){
	update_tibase(tibase);
}
